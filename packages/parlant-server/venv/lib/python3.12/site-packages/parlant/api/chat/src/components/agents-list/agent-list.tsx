import { type ReactNode, useEffect } from 'react'
import clsx from 'clsx'
import { useAtom } from 'jotai'
import {
  agentAtom,
  agentsAtom,
  customerAtom,
  customersAtom,
  dialogAtom,
  newSessionAtom,
  sessionAtom,
} from '@/store'
import type { AgentInterface, CustomerInterface, SessionInterface } from '@/utils/interfaces'
import { spaceClick } from '@/utils/methods'
import Avatar from '../avatar/avatar'
import { DialogDescription, DialogHeader, DialogTitle } from '../ui/dialog'

export const NEW_SESSION_ID = 'NEW_SESSION'

const newSessionObj: SessionInterface = {
  customer_id: '',
  title: 'New Conversation',
  agent_id: '',
  creation_utc: new Date().toLocaleString(),
  id: NEW_SESSION_ID,
}

const AgentList = (): ReactNode => {
  const [, setSession] = useAtom(sessionAtom)
  const [agent, setAgent] = useAtom(agentAtom)
  const [agents] = useAtom(agentsAtom)
  const [customers] = useAtom(customersAtom)
  const [, setCustomer] = useAtom(customerAtom)
  const [, setNewSession] = useAtom(newSessionAtom)
  const [dialog] = useAtom(dialogAtom)

  useEffect(() => {
    if (agents?.length && agents.length === 1) selectAgent(agents[0])
  }, [])

  const selectAgent = (agent: AgentInterface): void => {
    setAgent(agent)
    if (customers.length < 2) {
      selectCustomer(customers?.[0], agent)
    }
  }

  const selectCustomer = (customer: CustomerInterface, currAgent?: AgentInterface) => {
    setAgent(agent || currAgent || null)
    setCustomer(customer)
    setNewSession({ ...newSessionObj, agent_id: agent?.id as string, customer_id: customer.id })
    setSession(newSessionObj)
    dialog.closeDialog()
  }

  return (
    <div className='flex h-full flex-col'>
      <DialogHeader>
        <DialogTitle>
          <div className='mt-[24px] mb-[12px] flex w-full items-center justify-between ps-[30px] pe-[20px]'>
            <DialogDescription className='font-semibold text-[20px]'>
              {agent ? 'Select a Customer' : 'Select an Agent'}
            </DialogDescription>
            <img
              onKeyDown={spaceClick}
              onClick={dialog.closeDialog}
              className='cursor-pointer rounded-full'
              src='icons/close.svg'
              alt='close'
              height={24}
              width={24}
            />
          </div>
        </DialogTitle>
      </DialogHeader>
      <div className='fixed-scroll relative flex flex-1 flex-col overflow-auto'>
        {(agent ? customers : agents)?.map((entity) => (
          <div
            data-testid='agent'
            tabIndex={0}
            onKeyDown={spaceClick}
            role='button'
            onClick={() => (agent ? selectCustomer(entity) : selectAgent(entity))}
            key={entity.id}
            className={clsx(
              'flex h-[78px] min-h-[78px] w-full cursor-pointer items-center border-b-[#EBECF0] border-b-[0.6px] border-b-solid ps-[30px] pe-[20px] hover:bg-[#FBFBFB]'
            )}
          >
            <Avatar agent={entity} tooltip={false} />
            <div>
              <div className='font-medium text-[16px]'>
                {entity.id === 'guest' ? 'Guest' : entity.name}
              </div>
              <div className='font-light text-[#A9A9A9] text-[14px]'>(id={entity.id})</div>
            </div>
          </div>
        ))}
      </div>
    </div>
  )
}

export default AgentList
