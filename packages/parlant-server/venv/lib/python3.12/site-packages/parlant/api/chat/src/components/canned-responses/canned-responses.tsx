import { useState } from 'react'
import { type ClassNameValue, twMerge } from 'tailwind-merge'
import CannedResponse from '../canned-response/canned-response'
import ErrorBoundary from '../error-boundary/error-boundary'

export interface Utterance {
  id: string
  value: string
}

const CannedResponses = ({
  cannedResponses,
  className,
}: {
  cannedResponses: { id: string; value: string }[]
  className?: ClassNameValue
}) => {
  const [isOpen, setIsOpen] = useState(false)

  const onToggle = (e: any) => {
    setIsOpen(e.target.open)
  }

  return (
    <details onToggle={onToggle} open className={twMerge('max-h-[50%]', className)}>
      <summary
        className={twMerge(
          'ms-[24px] me-[30px] flex h-[34px] cursor-pointer items-center justify-between bg-white text-[#282828] text-[16px] '
        )}
      >
        <span>Canned Responses</span>
        <img src='icons/arrow-down.svg' alt='' style={{ rotate: isOpen ? '0deg' : '180deg' }} />
      </summary>
      <div className='p-[14px] pt-[10px] pb-0'>
        <div className='rounded-[14px]'>
          <div className='fixed-scroll max-h-[308px] overflow-auto rounded-[10px] border-[#F5F9F7] border-[6px] bg-[#F5F9F7]'>
            <ErrorBoundary component={<div>Could not load canned responses</div>}>
              {cannedResponses.map((cannedResponse) => (
                <CannedResponse key={cannedResponse.id} cannedResponse={cannedResponse} />
              ))}
            </ErrorBoundary>
          </div>
        </div>
      </div>
    </details>
  )
}

export default CannedResponses
